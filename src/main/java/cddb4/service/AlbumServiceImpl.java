package cddb4.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import cddb4.dao.AlbumDao;
import cddb4.model.Album;

@Service("albumService")
@Transactional
public class AlbumServiceImpl implements AlbumService {
	
	@Autowired
	private AlbumDao dao;

	@Override
	public Album findById(long id) {
		return dao.findById(id);
	}

	@Override
	public Album findByArtistName(String artist, String name) {
		return dao.findByArtistName(artist, name);
	}

	@Override
	public List<Album> findAllAlbums() {
		return dao.findAllAlbums();
	}

	@Override
	public void saveAlbum(Album album) {
		album.setId(0); //id is autogenerated, setting it to 0 prevents errors in case upper layers pass one in anyway
		dao.saveAlbum(album);
	}

	//Since the class is @Transactional, this method should (in fact, does) work without calling dao.update()
	@Override
	public void updateAlbum(Album album) {
		Album oldAlbum = dao.findById(album.getId());
		if(oldAlbum!=null){
			oldAlbum.setArtist(album.getArtist());
			oldAlbum.setName(album.getName());
			oldAlbum.setYear(album.getYear());
		}
	}

	@Override
	public void deleteAlbum(Album album) {
		dao.deleteAlbum(album);
	}
	
	@Override
	public boolean albumExists(long id){
		return findById(id) != null;
	}
	
	@Override
	public boolean albumUnique(Album album){
		return findByArtistName(album.getArtist(), album.getName()) == null;
	}

}
